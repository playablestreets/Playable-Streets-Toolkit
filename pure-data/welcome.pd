#N canvas -7 0 665 675 10;
#X obj 267 183 pst-qwerty;
#X obj 60 299 pst-control;
#X obj 26 409 pst-scale flt 1 flt 8 flt 1;
#X obj 267 221 pst-osc qwerty;
#X text 182 298 < pst-control takes variable touch data and sends it
out as midi control change data, f 31;
#X text 188 425 < pst-scale takes variable touch data and maps it to
a musical scale \, outputing midi note pairs, f 27;
#X text 336 185 < outputs key/value pairs;
#X obj 81 208 pst-osc signal;
#X obj 24 25 pst-touch flt 0.154762 flt 0.349206 sym EC-FA-BC-58-BD-13
flt 0.809524;
#X obj 26 530 pst-osc notes;
#X obj 26 385 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 413 460 pst-sound sym ./samples flt 0 flt 0;
#X floatatom 413 348 5 0 0 0 - - -, f 5;
#X text 418 375 < left inlet triggers sample;
#X text 383 426 right inlet sets directory >;
#X symbolatom 559 427 13 0 0 0 - - -, f 13;
#X obj 413 632 dac~;
#X obj 413 593 *~ 0.2;
#X text 187 34 < pst-reads touch data over wifi. It's argument is the
MAC address of the target touch sensor. Â  It outputs a variable value
between 0 and 1 from its left outlet. A bang in the right inlet triggers
recalibration., f 36;
#X text 394 220 < pst-osc-out forwards data from its inlet to the local
network as OSC on port 9000 using its argument as the OSC address.
throttle limits messages to an interval of 100ms, f 31;
#X connect 0 0 3 0;
#X connect 2 0 9 0;
#X connect 8 0 1 0;
#X connect 8 0 10 0;
#X connect 8 0 7 0;
#X connect 10 0 2 0;
#X connect 11 0 17 0;
#X connect 12 0 11 0;
#X connect 15 0 11 1;
#X connect 17 0 16 0;
#X connect 17 0 16 1;
